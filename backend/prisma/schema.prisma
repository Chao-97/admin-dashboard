// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id                   Int                   @id @default(autoincrement())
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  avatarUrl            String?
  username             String?
  website              String?
  company              String?
  bio                  String?
  authorEmail          String                @unique
  isPublic             Boolean               @default(false)
  posts                Post[]
  experiences          Experiences[]
  comments             Comment[]
  likes                Like[]
  educations           Education[]
  programmingLanguages ProgrammingLanguage[]
}

model ProgrammingLanguage {
  id        Int     @id @default(autoincrement())
  value     String
  label     String
  profileId Int
  Profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  @@unique([id])
}

model Post {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  type      PostType  @default(FUNNY)
  title     String
  content   String
  published Boolean   @default(false)
  viewCount Int       @default(0)
  profileId Int
  profile   Profile   @relation(fields: [profileId], references: [id], onDelete: Cascade)
  comments  Comment[]
  likes     Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  text      String
  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  profileId Int
  profile   Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  profileId Int
  profile   Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

model Experiences {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  company     String
  location    String
  from        DateTime @db.Date
  to          DateTime @db.Date
  current     Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  profileId   Int
  Profile     Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

model Education {
  id           Int      @id @default(autoincrement())
  school       String
  description  String
  degree       String
  fieldOfStudy String
  from         DateTime @db.Date
  to           DateTime @db.Date
  current      Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  profileId    Int
  Profile      Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

enum PostType {
  FUNNY
  TECH
  RANDOM
  NEWS
  SERIOUS
}
